----
REPL
----
- My explaination -
An REPL (Read Evaluate Print Loop), is a program that expects user input,
processes that user input, prints out the results, then loop back into the
input listener. I'd say it's basically a terminal. Examples might be NodeJS'
bash, Python's Shell, Linux Bash.

- Digital ocean -
A Read-Eval-Print Loop, or REPL, is a computer environment 
where user inputs are read and evaluated, and then 
the results are returned to the user. REPLs provide an interactive
 environment to explore tools available in specific environments or 
programming languages. Some examples include the Node.js console, 
IPython, the Bash shell, and the developer console found 
in most web browsers.

-------
Backlog
-------
Refers to breaking up functions of the program into "stories". Which you
execute in their order as you develop the program. Usually in top to bottom
order.
Each story has scenarios. Some stories can have multiple scenarios. The two 
common scenarios are when the story/function succeeds or fails.
Each scenario has a title (descriptive of the function/story) and details
following the title that describe the intended outcome from the scenario 
detail.

In this section they are teaching us to break up the details of a project
into executable tasks. Which is a practice we will need to maintain throughout
our career.
It's a way of us communicating who is busy with what, and what their progress
is with that task.
